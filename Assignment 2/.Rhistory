rm(list=ls())
if (!require("pacman")) install.packages("pacman")
pacman::p_load(ggplot2, stargazer, lmtest, plm,
sandwich, fixest, modelsummary, vtable, foreign, RCT)
#set tidy code
knitr::opts_chunk$set(tidy.opts = list(width.cutoff = 65), tidy = TRUE)
prob10nosearch <- mean(data$benefits_week10[data$searchperiod==0])
rm(list=ls())
if (!require("pacman")) install.packages("pacman")
pacman::p_load(ggplot2, stargazer, lmtest, plm,
sandwich, fixest, modelsummary, vtable, foreign, RCT)
#set tidy code
knitr::opts_chunk$set(tidy.opts = list(width.cutoff = 65), tidy = TRUE)
data <- read.dta("searchperiod.dta")
prob10nosearch <- mean(data$benefits_week10[data$searchperiod==0])
prob10search <- mean(data$benefits_week10[data$searchperiod==1])
prob30nosearch <- mean(data$benefits_week30[data$searchperiod==0])
prob30search <- mean(data$benefits_week30[data$searchperiod==1])
"Mean probability of having benefits in week 10 of thouse without search period =" prob10nosearch
prob10nosearch <- mean(data$benefits_week10[data$searchperiod==0])
prob10nosearch
prob10search <- mean(data$benefits_week10[data$searchperiod==1])
prob10search
prob30nosearch <- mean(data$benefits_week30[data$searchperiod==0])
prob30nosearch
prob30search <- mean(data$benefits_week30[data$searchperiod==1])
prob30search
balance <- balance_table(data, "searchperiod")
knitr::kable(balance, caption = "Balance Table")
mean(data$educ_unknown)
0.03*1665
balance
probSearch = mean(data$searchperiod)
ymin = 0
ymax = 1
# Benefits after 10 weeks - No assumption
Noass10_LB = prob10search*probSearch - prob10nosearch * (1-probSearch) + (ymin + ymax) * (1-probSearch) - ymax
Noass10_UB = prob10search*probSearch - prob10nosearch * (1-probSearch) + (ymin + ymax) * (1-probSearch) - ymin
# Benefits after 30 weeks - No assumption
Noass30_LB = prob30search*probSearch - prob30nosearch * (1-probSearch) + (ymin + ymax) * (1-probSearch) - ymax
Noass30_UB = prob30search*probSearch - prob30nosearch * (1-probSearch) + (ymin + ymax) * (1-probSearch) - ymin
# Benefits after 10 weeks - Roy Model
Roy10_LB = -(prob10nosearch - ymin)* (1-probSearch)
Roy10_UB =  (prob10search - ymin) * probSearch
# Benefits after 30 weeks - Roy Model
Roy30_LB = -(prob30nosearch - ymin)* (1-probSearch)
Roy30_UB =  (prob30search - ymin) * probSearch
# Benefits after 10 weeks - MTS/MTR
MTS10_LB = prob10search - prob10nosearch
MTS10_UB = prob10search*probSearch - prob10nosearch * (1-probSearch) + (ymin + ymax) * (1-probSearch) - ymin
MTR10_LB = prob10search*probSearch - prob10nosearch * (1-probSearch) + (ymin + ymax) * (1-probSearch) - ymax
MTR10_UB = 0
MTR_LB=-16.4
MTR_UB=57.2*0.4563-73.6*0.5437+100*0.53437
MTSMTR10_LB = MTS10_LB
MTSMTR10_UB = MTR10_UB
MTSMTR_LB=-16.4
MTSMTR_UB=0
# Benefits after 30 weeks - MTS/MTR
MTS30_LB = prob30search - prob30nosearch
MTS30_UB = prob30search*probSearch - prob30nosearch * (1-probSearch) + (ymin + ymax) * (1-probSearch) - ymin
MTR30_LB = prob30search*probSearch - prob30nosearch * (1-probSearch) + (ymin + ymax) * (1-probSearch) - ymax
MTR30_UB = 0
MTSMTR30_LB = MTS30_LB
MTSMTR30_UB = MTR30_UB
prob10search_bachelormaster = mean(data$benefits_week10[data$searchperiod==1 & data$educ_bachelormaster==1])
prob10nosearch_bachelormaster = mean(data$benefits_week10[data$searchperiod==0 & data$educ_bachelormaster==1])
prob10search_vocational = mean(data$benefits_week10[data$searchperiod==1 & data$educ_vocational==1])
prob10nosearch_vocational = mean(data$benefits_week10[data$searchperiod==0 & data$educ_vocational==1])
prob10search_prepvocational = mean(data$benefits_week10[data$searchperiod==1 & data$educ_prepvocational==1])
prob10nosearch_prepvocational = mean(data$benefits_week10[data$searchperiod==0 & data$educ_prepvocational==1])
# Goes against the MIV assumption!
prob10search_primaryorless = mean(data$benefits_week10[data$searchperiod==1 & data$educ_primaryorless==1])
prob10nosearch_primaryorless = mean(data$benefits_week10[data$searchperiod==0 & data$educ_primaryorless==1])
# Does not tell us anything, so ignore
prob10search_unknown = mean(data$benefits_week10[data$searchperiod==1 & data$educ_unknown==1])
prob10nosearch_unknown = mean(data$benefits_week10[data$searchperiod==0 & data$educ_unknown==1])
prob_BachelorMaster = mean(data$educ_bachelormaster)
# MIV for Benefits after 10 weeks
prob10nosearch_LB = (1-prob_BachelorMaster) * mean(data$benefits_week10[data$searchperiod==0 & data$educ_bachelormaster==0]) + prob_BachelorMaster * max(mean(data$benefits_week10[data$searchperiod==0 & data$educ_bachelormaster==0]), mean(data$benefits_week10[data$searchperiod==0 & data$educ_bachelormaster==1]))
prob10nosearch_UB = (1-prob_BachelorMaster) * min(mean(data$benefits_week10[data$searchperiod==0 & data$educ_bachelormaster==0]), mean(data$benefits_week10[data$searchperiod==0 & data$educ_bachelormaster==1])) + prob_BachelorMaster * mean(data$benefits_week10[data$searchperiod==0 & data$educ_bachelormaster==1])
prob10search_LB = (1-prob_BachelorMaster) * mean(data$benefits_week10[data$searchperiod==1 & data$educ_bachelormaster==0]) + prob_BachelorMaster * max(mean(data$benefits_week10[data$searchperiod==1 & data$educ_bachelormaster==0]), mean(data$benefits_week10[data$searchperiod==1 & data$educ_bachelormaster==1]))
prob10search_UB = (1-prob_BachelorMaster) * min(mean(data$benefits_week10[data$searchperiod==1 & data$educ_bachelormaster==0]), mean(data$benefits_week10[data$searchperiod==1 & data$educ_bachelormaster==1])) + prob_BachelorMaster * mean(data$benefits_week10[data$searchperiod==1 & data$educ_bachelormaster==1])
MIV10_LB = prob10search_LB - prob10nosearch_LB
MIV10_UB = prob10search_UB - prob10nosearch_UB
# MIV for Benefits after 30 weeks
prob30nosearch_LB = (1-prob_BachelorMaster) * mean(data$benefits_week30[data$searchperiod==0 & data$educ_bachelormaster==0]) + prob_BachelorMaster * max(mean(data$benefits_week30[data$searchperiod==0 & data$educ_bachelormaster==0]), mean(data$benefits_week30[data$searchperiod==0 & data$educ_bachelormaster==1]))
prob30nosearch_UB = (1-prob_BachelorMaster) * min(mean(data$benefits_week30[data$searchperiod==0 & data$educ_bachelormaster==0]), mean(data$benefits_week30[data$searchperiod==0 & data$educ_bachelormaster==1])) + prob_BachelorMaster * mean(data$benefits_week30[data$searchperiod==0 & data$educ_bachelormaster==1])
prob30search_LB = (1-prob_BachelorMaster) * mean(data$benefits_week30[data$searchperiod==1 & data$educ_bachelormaster==0]) + prob_BachelorMaster * max(mean(data$benefits_week30[data$searchperiod==1 & data$educ_bachelormaster==0]), mean(data$benefits_week30[data$searchperiod==1 & data$educ_bachelormaster==1]))
prob30search_UB = (1-prob_BachelorMaster) * min(mean(data$benefits_week30[data$searchperiod==1 & data$educ_bachelormaster==0]), mean(data$benefits_week30[data$searchperiod==1 & data$educ_bachelormaster==1])) + prob_BachelorMaster * mean(data$benefits_week30[data$searchperiod==1 & data$educ_bachelormaster==1])
MIV30_LB = prob30search_LB - prob30nosearch_LB
MIV30_UB = prob30search_UB - prob30nosearch_UB
# Dataframe with all bounds for benefits after 10 weeks
Model <- c('No Assumptions', 'Roy Model', 'MTS', 'MTR', 'MTS+MTR', 'MIV')
Lowerbound <- c(Noass10_LB, Roy10_LB, MTS10_LB, MTR10_LB, MTSMTR10_LB, MIV10_LB)
Upperbound <- c(Noass10_UB, Roy10_UB, MTS10_UB, MTR10_UB, MTSMTR10_UB, MIV10_UB)
bounds10 <- data.frame(Model, Lowerbound, Upperbound)
knitr::kable(bounds10, caption = "10 Week Bounds")
# Dataframe with all bounds for benefits after 30 weeks
Model <- c('No Assumptions', 'Roy Model', 'MTS', 'MTR', 'MTS+MTR', 'MIV')
Lowerbound <- c(Noass30_LB, Roy30_LB, MTS30_LB, MTR30_LB, MTSMTR30_LB, MIV30_LB)
Upperbound <- c(Noass30_UB, Roy30_UB, MTS30_UB, MTR30_UB, MTSMTR30_UB, MIV30_UB)
bounds30 <- data.frame(Model, Lowerbound, Upperbound)
knitr::kable(bounds30, caption = "30 Week Bounds")
bounds10$Model  = factor(bounds10$Model, levels=c("No Assumptions", "Roy Model", "MTS", "MTR", "MTS+MTR", "MIV"))
library(ggplot2)
library(reshape2)
d <- melt(bounds10, id.vars="Model", value.name = "TreatmentEffect")
# Everything on the same plot
ggplot(d, aes(Model, TreatmentEffect, col=variable)) +
geom_line( color="grey") +
geom_point(shape="-", color="#69b3a2", size=15) +
stat_smooth() +
geom_hline(yintercept=0)
rm(list=ls())
if (!require("pacman")) install.packages("pacman")
pacman::p_load(ggplot2, stargazer, lmtest, plm,
sandwich, fixest, modelsummary, vtable, foreign, RCT, reshape2)
#set tidy code
knitr::opts_chunk$set(tidy.opts = list(width.cutoff = 65), tidy = TRUE)
rm(list=ls())
if (!require("pacman")) install.packages("pacman")
pacman::p_load(ggplot2, stargazer, lmtest, plm,
sandwich, fixest, modelsummary, vtable, foreign, RCT, reshape2)
#set tidy code
knitr::opts_chunk$set(tidy.opts = list(width.cutoff = 65), tidy = TRUE)
data <- read.dta("searchperiod.dta")
prob10nosearch <- mean(data$benefits_week10[data$searchperiod==0])
prob10nosearch
prob10search <- mean(data$benefits_week10[data$searchperiod==1])
prob10search
prob30nosearch <- mean(data$benefits_week30[data$searchperiod==0])
prob30nosearch
prob30search <- mean(data$benefits_week30[data$searchperiod==1])
prob30search
balance <- balance_table(data, "searchperiod")
knitr::kable(balance, caption = "Balance Table")
m10b <- lm(benefits_week10 ~ searchperiod + sumincome_12monthsbefore+sumincome_24monthsbefore+age + female + children + partner + period2 +period3+period4 +location2+ location3+ location4+ location5+ educ_bachelormaster + educ_prepvocational + educ_unknown + educ_vocational, data = data)
m10a <- lm(benefits_week10 ~ searchperiod, data = data)
m30b <- lm(benefits_week30 ~ searchperiod, data = data)
m30a <- lm(benefits_week30 ~ searchperiod + sumincome_12monthsbefore+sumincome_24monthsbefore+age + female + children + partner + period2 +period3+period4 +location2+ location3+ location4+ location5+ educ_bachelormaster + educ_prepvocational + educ_unknown + educ_vocational, data = data)
stargazer(m10a, m10b, m30a, m30b, column.labels = c("", "Covariates","", "Covariates"),type = "latex",
title = "LPM for Benefits", header = FALSE, label = "tab:reg", keep = c("searchperiod"))
probSearch = mean(data$searchperiod)
ymin = 0
ymax = 1
# Benefits after 10 weeks - No assumption
Noass10_LB = prob10search*probSearch - prob10nosearch * (1-probSearch) + (ymin + ymax) * (1-probSearch) - ymax
Noass10_UB = prob10search*probSearch - prob10nosearch * (1-probSearch) + (ymin + ymax) * (1-probSearch) - ymin
# Benefits after 30 weeks - No assumption
Noass30_LB = prob30search*probSearch - prob30nosearch * (1-probSearch) + (ymin + ymax) * (1-probSearch) - ymax
Noass30_UB = prob30search*probSearch - prob30nosearch * (1-probSearch) + (ymin + ymax) * (1-probSearch) - ymin
# Benefits after 10 weeks - Roy Model
Roy10_LB = -(prob10nosearch - ymin)* (1-probSearch)
Roy10_UB =  (prob10search - ymin) * probSearch
# Benefits after 30 weeks - Roy Model
Roy30_LB = -(prob30nosearch - ymin)* (1-probSearch)
Roy30_UB =  (prob30search - ymin) * probSearch
# Benefits after 10 weeks - MTS/MTR
MTS10_LB = prob10search - prob10nosearch
MTS10_UB = prob10search*probSearch - prob10nosearch * (1-probSearch) + (ymin + ymax) * (1-probSearch) - ymin
MTR10_LB = prob10search*probSearch - prob10nosearch * (1-probSearch) + (ymin + ymax) * (1-probSearch) - ymax
MTR10_UB = 0
MTSMTR10_LB = MTS10_LB
MTSMTR10_UB = MTR10_UB
MTSMTR_LB=-16.4
MTSMTR_UB=0
# Benefits after 30 weeks - MTS/MTR
MTS30_LB = prob30search - prob30nosearch
MTS30_UB = prob30search*probSearch - prob30nosearch * (1-probSearch) + (ymin + ymax) * (1-probSearch) - ymin
MTR30_LB = prob30search*probSearch - prob30nosearch * (1-probSearch) + (ymin + ymax) * (1-probSearch) - ymax
MTR30_UB = 0
MTSMTR30_LB = MTS30_LB
MTSMTR30_UB = MTR30_UB
prob10search_bachelormaster = mean(data$benefits_week10[data$searchperiod==1 & data$educ_bachelormaster==1])
prob10nosearch_bachelormaster = mean(data$benefits_week10[data$searchperiod==0 & data$educ_bachelormaster==1])
prob10search_vocational = mean(data$benefits_week10[data$searchperiod==1 & data$educ_vocational==1])
prob10nosearch_vocational = mean(data$benefits_week10[data$searchperiod==0 & data$educ_vocational==1])
prob10search_prepvocational = mean(data$benefits_week10[data$searchperiod==1 & data$educ_prepvocational==1])
prob10nosearch_prepvocational = mean(data$benefits_week10[data$searchperiod==0 & data$educ_prepvocational==1])
# Goes against the MIV assumption!
prob10search_primaryorless = mean(data$benefits_week10[data$searchperiod==1 & data$educ_primaryorless==1])
prob10nosearch_primaryorless = mean(data$benefits_week10[data$searchperiod==0 & data$educ_primaryorless==1])
# Does not tell us anything, so ignore
prob10search_unknown = mean(data$benefits_week10[data$searchperiod==1 & data$educ_unknown==1])
prob10nosearch_unknown = mean(data$benefits_week10[data$searchperiod==0 & data$educ_unknown==1])
prob10search_NObachelormaster = mean(data$benefits_week10[data$searchperiod==1 & data$educ_bachelormaster==0])
prob10nosearch_NObachelormaster = mean(data$benefits_week10[data$searchperiod==0 & data$educ_bachelormaster==0])
prob_BachelorMaster = mean(data$educ_bachelormaster)
# MIV for Benefits after 10 weeks
prob10nosearch_LB = (1-prob_BachelorMaster) * mean(data$benefits_week10[data$searchperiod==0 & data$educ_bachelormaster==0]) + prob_BachelorMaster * max(mean(data$benefits_week10[data$searchperiod==0 & data$educ_bachelormaster==0]), mean(data$benefits_week10[data$searchperiod==0 & data$educ_bachelormaster==1]))
prob10nosearch_UB = (1-prob_BachelorMaster) * min(mean(data$benefits_week10[data$searchperiod==0 & data$educ_bachelormaster==0]), mean(data$benefits_week10[data$searchperiod==0 & data$educ_bachelormaster==1])) + prob_BachelorMaster * mean(data$benefits_week10[data$searchperiod==0 & data$educ_bachelormaster==1])
prob10search_LB = (1-prob_BachelorMaster) * mean(data$benefits_week10[data$searchperiod==1 & data$educ_bachelormaster==0]) + prob_BachelorMaster * max(mean(data$benefits_week10[data$searchperiod==1 & data$educ_bachelormaster==0]), mean(data$benefits_week10[data$searchperiod==1 & data$educ_bachelormaster==1]))
prob10search_UB = (1-prob_BachelorMaster) * min(mean(data$benefits_week10[data$searchperiod==1 & data$educ_bachelormaster==0]), mean(data$benefits_week10[data$searchperiod==1 & data$educ_bachelormaster==1])) + prob_BachelorMaster * mean(data$benefits_week10[data$searchperiod==1 & data$educ_bachelormaster==1])
MIV10_LB = prob10search_LB - prob10nosearch_LB
MIV10_UB = prob10search_UB - prob10nosearch_UB
# MIV for Benefits after 30 weeks
prob30nosearch_LB = (1-prob_BachelorMaster) * mean(data$benefits_week30[data$searchperiod==0 & data$educ_bachelormaster==0]) + prob_BachelorMaster * max(mean(data$benefits_week30[data$searchperiod==0 & data$educ_bachelormaster==0]), mean(data$benefits_week30[data$searchperiod==0 & data$educ_bachelormaster==1]))
prob30nosearch_UB = (1-prob_BachelorMaster) * min(mean(data$benefits_week30[data$searchperiod==0 & data$educ_bachelormaster==0]), mean(data$benefits_week30[data$searchperiod==0 & data$educ_bachelormaster==1])) + prob_BachelorMaster * mean(data$benefits_week30[data$searchperiod==0 & data$educ_bachelormaster==1])
prob30search_LB = (1-prob_BachelorMaster) * mean(data$benefits_week30[data$searchperiod==1 & data$educ_bachelormaster==0]) + prob_BachelorMaster * max(mean(data$benefits_week30[data$searchperiod==1 & data$educ_bachelormaster==0]), mean(data$benefits_week30[data$searchperiod==1 & data$educ_bachelormaster==1]))
prob30search_UB = (1-prob_BachelorMaster) * min(mean(data$benefits_week30[data$searchperiod==1 & data$educ_bachelormaster==0]), mean(data$benefits_week30[data$searchperiod==1 & data$educ_bachelormaster==1])) + prob_BachelorMaster * mean(data$benefits_week30[data$searchperiod==1 & data$educ_bachelormaster==1])
MIV30_LB = prob30search_LB - prob30nosearch_LB
MIV30_UB = prob30search_UB - prob30nosearch_UB
# Dataframe with all bounds for benefits after 10 weeks
Model <- c('No Assumptions', 'Roy Model', 'MTS', 'MTR', 'MTS+MTR', 'MIV')
Lowerbound <- c(Noass10_LB, Roy10_LB, MTS10_LB, MTR10_LB, MTSMTR10_LB, MIV10_LB)
Upperbound <- c(Noass10_UB, Roy10_UB, MTS10_UB, MTR10_UB, MTSMTR10_UB, MIV10_UB)
bounds10 <- data.frame(Model, Lowerbound, Upperbound)
knitr::kable(bounds10, caption = "10 Week Bounds")
# Dataframe with all bounds for benefits after 30 weeks
Model <- c('No Assumptions', 'Roy Model', 'MTS', 'MTR', 'MTS+MTR', 'MIV')
Lowerbound <- c(Noass30_LB, Roy30_LB, MTS30_LB, MTR30_LB, MTSMTR30_LB, MIV30_LB)
Upperbound <- c(Noass30_UB, Roy30_UB, MTS30_UB, MTR30_UB, MTSMTR30_UB, MIV30_UB)
bounds30 <- data.frame(Model, Lowerbound, Upperbound)
knitr::kable(bounds30, caption = "30 Week Bounds")
bounds10$Model  = factor(bounds10$Model, levels=c("No Assumptions", "Roy Model", "MTS", "MTR", "MTS+MTR", "MIV"))
d <- melt(bounds10, id.vars="Model", value.name = "TreatmentEffect")
# Everything on the same plot
ggplot(d, aes(Model, TreatmentEffect, col=variable)) +
geom_line( color="grey") +
geom_point(shape="-", color="#69b3a2", size=15) +
stat_smooth() +
geom_hline(yintercept=0)
bounds30$Model  = factor(bounds30$Model, levels=c("No Assumptions", "Roy Model", "MTS", "MTR", "MTS+MTR", "MIV"))
e <- melt(bounds30, id.vars="Model", value.name = "TreatmentEffect")
# Everything on the same plot
ggplot(e, aes(Model, TreatmentEffect, col=variable)) +
geom_line( color="grey") +
geom_point(shape="-", color="#69b3a2", size=15) +
stat_smooth() +
geom_hline(yintercept=0)
View(e)
